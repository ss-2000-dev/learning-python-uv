services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: uv-django-todo:latest
    container_name: uv-django-todo-containner
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1 # Prevents Python from buffering output, displaying logs in real-time
    command: /app/.venv/bin/python manage.py migrate # Temorarily run migrations on container start
    # Docker Compose development watch
    develop:
      watch:
        - action: sync
          path: . # Watches the current host directory
          target: /app # Syncs to the /app directory inside the container
          ignore:
            - .venv/
            - __pycache__/
            - Learning/
            - .git/
            - "uv.lock"
            - "pyproject.toml"

        - action: rebuild
          path: pyproject.toml

        - action: rebuild
          path: uv.lock

    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: uv-django-todo-db
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
    ports:
      - "3306:3306"
    restart: unless-stopped

volumes:
  db_data:
